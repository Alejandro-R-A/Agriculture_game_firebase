upload(x = mtcars, projectURL = Sys.getenv(("db_url")))
library(fireData)
install.packages("fireData")
library(fireData)
install.packages("fireData")
R.version()
R.version()
R.version
library(fireData)
if (!require("devtools")) install.packages("devtools")
devtools::install_github("paulsp94/fireData")
library(fireData)
upload(x = mtcars, projectURL = Sys.getenv(("db_url")))
upload(x = mtcars, projectURL = Sys.getenv("db_url"))
library(fireData)
upload(x = mtcars, projectURL = Sys.getenv("db_url"))
Sys.getenv("api_key")
Sys.getenv("api_key")
library(fireData)
upload(x = mtcars, projectURL ="https://testshinyapp-c7ec6-default-rtdb.firebaseio.com/")
Sys.getenv("api_key")
Sys.getenv("api_key")
upload(x = mtcars, projectURL = Sys.getenv("api_key"))
library(fireData)
upload(x = mtcars, projectURL = Sys.getenv("api_key"))
upload(x = mtcars, projectURL = Sys.getenv("db_url"))
upload(x = list("a" = 1, "b" = 2, "c" = 3), projectURL = Sys.getenv("db_url"), directory = "main/testing")
shiny::runApp()
shiny::runApp()
patch(x = list("a" = 2), projectURL = Sys.getenv("db_url"),  directory = "main/testing/polls")
patch(x = list("a" = 2), projectURL = Sys.getenv("db_url"),  directory = "main/polls")
patch(x = list("a" = 2), projectURL = Sys.getenv("db_url"),  directory = "main/polls/-NMzfnRs7ZPxP8Q9_hhn")
patch(x = list("age" = 55), projectURL = Sys.getenv("db_url"),  directory = "main/polls/-NMzfnRs7ZPxP8Q9_hhn")
help(NS)
runApp()
ScoreTable
runApp()
View(ScoreTable)
data <- reactiveValues()
runApp()
typeof(ScoreTable)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
show_results_game_server <- function(id){
moduleServer(
id = id,
module = function(input, output, session){
timer <- reactiveTimer(10000)
data <- reactiveValues()
observe({
url <- Sys.getenv("db_url")
data$results <- future({
download_df(
projectURL = url,
fileName = "polls")
})
timer()
})
output$results <- renderDataTable({
data$results
})
}
)
}
runApp()
shiny::runApp()
ScoreTable
runApp()
upload_results_server("main")
runApp()
shiny::runApp()
runApp()
runApp()
View(FarmerChoices)
View(NeighbourScores)
View(ScoreTable)
View(FarmerChoicesCost3)
View(FarmerChoicesCost3)
ns <- NS(id)
shiny::runApp()
typeof(FarmerChoicesCost3)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
